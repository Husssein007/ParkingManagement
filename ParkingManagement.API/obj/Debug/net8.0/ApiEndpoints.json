[
  {
    "ContainingType": "ParkingManagement.API.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "ParkingManagement.API.Controllers.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "ParkingManagement.API.DTOs.UserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.DashboardController",
    "Method": "GetActiveUsers",
    "RelativePath": "api/Dashboard/active-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.DashboardController",
    "Method": "GetAvailableSpots",
    "RelativePath": "api/Dashboard/available-spots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.DashboardController",
    "Method": "GetMonthlyReservations",
    "RelativePath": "api/Dashboard/monthly-reservations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.DashboardController",
    "Method": "GetOccupiedSpots",
    "RelativePath": "api/Dashboard/occupied-spots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.DashboardController",
    "Method": "GetRecentActions",
    "RelativePath": "api/Dashboard/recent-actions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.DashboardController",
    "Method": "GetTotalParkingSpots",
    "RelativePath": "api/Dashboard/total-parking-spots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.MessagesController",
    "Method": "SendMessage",
    "RelativePath": "api/Messages",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "messageDto",
        "Type": "ParkingManagement.API.DTOs.MessageDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.MessagesController",
    "Method": "GetMessages",
    "RelativePath": "api/Messages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[ParkingManagement.API.Models.Message, ParkingManagement.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ParkingSpotController",
    "Method": "GetParkingSpots",
    "RelativePath": "api/parking-spots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ParkingSpotController",
    "Method": "AddParkingSpot",
    "RelativePath": "api/parking-spots",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "parkingSpotDto",
        "Type": "ParkingManagement.API.DTOs.ParkingSpotDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ParkingSpotController",
    "Method": "GetParkingSpotById",
    "RelativePath": "api/parking-spots/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ParkingSpotController",
    "Method": "UpdateParkingSpot",
    "RelativePath": "api/parking-spots/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "parkingSpotDto",
        "Type": "ParkingManagement.API.DTOs.ParkingSpotDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ParkingSpotController",
    "Method": "DeleteParkingSpot",
    "RelativePath": "api/parking-spots/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ReservationController",
    "Method": "GetReservations",
    "RelativePath": "api/reservations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ReservationController",
    "Method": "AddReservation",
    "RelativePath": "api/reservations",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reservationDto",
        "Type": "ParkingManagement.API.DTOs.ReservationCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ReservationController",
    "Method": "GetReservationById",
    "RelativePath": "api/reservations/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ReservationController",
    "Method": "UpdateReservation",
    "RelativePath": "api/reservations/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ParkingManagement.API.DTOs.ReservationCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ReservationController",
    "Method": "DeleteReservation",
    "RelativePath": "api/reservations/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ReservationController",
    "Method": "GetReservationsByUser",
    "RelativePath": "api/reservations/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.ReservationController",
    "Method": "GetReservationsWithUser",
    "RelativePath": "api/reservations/with-users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.UserController",
    "Method": "GetUsers",
    "RelativePath": "api/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.UserController",
    "Method": "AddUser",
    "RelativePath": "api/users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDto",
        "Type": "ParkingManagement.API.DTOs.UserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/users/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/users/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "userDto",
        "Type": "ParkingManagement.API.DTOs.UserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/users/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ParkingManagement.API.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ParkingManagement.API.WeatherForecast, ParkingManagement.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]